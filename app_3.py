# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pDHLEpb9twY3UIBvujQGBGIog7lAj2HW
"""

import streamlit as st
import pandas as pd
import re
import openpyxl

def process_csv(uploaded_file):
    # Leer el archivo CSV
    df = pd.read_csv(uploaded_file, sep=',')  # Ajusta el separador si es necesario

    # Definir expresiones regulares para cada tipo de dato
    precio_regex = r"^\d+(\.\d+)?$"
    nombre_regex = r"^\w+\s\w+$"
    fecha_regex = r"^\d{2}/\d{2}/\d{2}$"
    email_regex = r"^[^\s@]+@[^\s@]+\.[^\s@]+$"
    telefono_regex = r"^\+\d{2}\s\d{9}$"

    # Crear listas para almacenar los datos filtrados y ordenados
    precios, nombres_cliente1, nombres_cliente2, fechas, emails, telefonos = [], [], [], [], [], []

    # Iterar sobre cada fila del DataFrame
    for index, row in df.iterrows():
        precio = row['Precio']
        nombre_cliente1 = row['Nombres del cliente 1']
        nombre_cliente2 = row['Nombres del cliente 2']
        fecha = row['Fecha de compra del producto']
        email = row['Dirección de correo electrónico']
        telefono = row['Número telefónico']

        # Validar los datos con las expresiones regulares
        if re.match(precio_regex, str(precio)):
            precios.append(precio)
        if re.match(nombre_regex, nombre_cliente1):
            nombres_cliente1.append(nombre_cliente1)
        if re.match(nombre_regex, nombre_cliente2):
            nombres_cliente2.append(nombre_cliente2)
        if re.match(fecha_regex, fecha):
            fechas.append(fecha)
        if re.match(email_regex, email):
            emails.append(email)
        if re.match(telefono_regex, telefono):
            telefonos.append(telefono)

    # Crear un nuevo DataFrame con los datos filtrados y ordenados
    data = {'Precio': precios, 'Nombres del cliente 1': nombres_cliente1,
            'Nombres del cliente 2': nombres_cliente2, 'Fecha de compra del producto': fechas,
            'Dirección de correo electrónico': emails, 'Número telefónico': telefonos}
    df_filtered = pd.DataFrame(data)

    # Crear un archivo Excel
    with pd.ExcelWriter('datos_ordenados.xlsx') as writer:
        df_filtered.to_excel(writer, index=False)

    return df_filtered

# Interfaz de usuario de Streamlit
st.title("Procesador de CSV con Regex")

uploaded_file = st.file_uploader("Sube tu archivo CSV", type=["csv"])

if uploaded_file is not None:
    df = process_csv(uploaded_file)
    st.success("Archivo procesado exitosamente!")
    st.dataframe(df)
    st.download_button("Descargar archivo Excel", df.to_excel, "datos_ordenados.xlsx", mime='application/vnd.ms-excel')