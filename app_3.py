# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pDHLEpb9twY3UIBvujQGBGIog7lAj2HW
"""

import streamlit as st
import pandas as pd
import re
import xlsxwriter

def extract_data(file):
    """Extrae información de un archivo CSV y la organiza en un DataFrame de pandas.

    Args:
        file (str): Ruta al archivo CSV.

    Returns:
        pandas.DataFrame: DataFrame con la información extraída.
    """

    data = []
    with open(file, 'r') as f:
        for line in f:
            # Definición de patrones de búsqueda (ajustar según sea necesario)
            precio_pattern = r"(\d+\.\d+|\d+)"
            nombre1_pattern = r"(\w+\s\w+)"
            nombre2_pattern = r"(\w+\s\w+)"
            fecha_pattern = r"(\d{2}/\d{2}/\d{2})"
            email_pattern = r"(\S+@\S+\.\S+)"
            telefono_pattern = r"\+(\d{2})\s(\d{9})"

            # Extracción de datos utilizando expresiones regulares
            match = re.search(precio_pattern, line)
            precio = float(match.group(1)) if match else None
            match = re.search(nombre1_pattern, line)
            nombre1 = match.group(1) if match else None
            # ... (repetir para los demás patrones)

            data.append([precio, nombre1, nombre2, fecha, email, telefono])

    df = pd.DataFrame(data, columns=['Precio', 'Nombre Cliente 1', 'Nombre Cliente 2', 'Fecha', 'Email', 'Teléfono'])
    return df

def main():
    st.title('Extractor de Datos CSV')

    # Subida del archivo
    uploaded_file = st.file_uploader("Sube tu archivo CSV", type=["csv"])

    if uploaded_file is not None:
        df = extract_data(uploaded_file)

        # Mostrar el DataFrame en Streamlit
        st.dataframe(df)

        # Descargar el DataFrame como Excel
        @st.cache
        def convert_df(df):
            # IMPORTANT: Cache the conversion to prevent computation on every rerun
            return df.to_excel(index=False)

        xlsx = convert_df(df)
        st.download_button(
            label="Descargar como Excel",
            data=xlsx,
            file_name='datos.xlsx',
            mime='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        )

if __name__ == '__main__':
    main()