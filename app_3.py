# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pDHLEpb9twY3UIBvujQGBGIog7lAj2HW
"""

import streamlit as st
import pandas as pd
import re
import openpyxl

def clean_data(df):
    # Expresiones regulares para limpiar los datos
    pattern_precio = r"^\d+(\.\d+)?$"
    pattern_nombre = r"^\w+\s\w+$"
    pattern_fecha = r"^\d{2}/\d{2}/\d{2}$"
    pattern_email = r"^[^@]+@[^@]+\.[^@]+$"
    pattern_telefono = r"^\+\d{2}\s\d{9}$"

    # Limpiar y ordenar los datos
    df['Precio'] = df['Precio'].apply(lambda x: float(x) if re.match(pattern_precio, str(x)) else None)
    df['Nombres cliente 1'] = df['Nombres cliente 1'].apply(lambda x: x if re.match(pattern_nombre, x) else None)
    df['Nombres cliente 2'] = df['Nombres cliente 2'].apply(lambda x: x if re.match(pattern_nombre, x) else None)
    df['Fecha de compra'] = pd.to_datetime(df['Fecha de compra'], format='%d/%m/%y', errors='coerce')
    df['Dirección de correo electrónico'] = df['Dirección de correo electrónico'].apply(lambda x: x if re.match(pattern_email, x) else None)
    df['Número telefónico'] = df['Número telefónico'].apply(lambda x: x if re.match(pattern_telefono, x) else None)
    df.sort_values(by=['Fecha de compra'], inplace=True)

    return df

def main():
    st.title("Organizador de Datos CSV")

    # Subida del archivo
    uploaded_file = st.file_uploader("Sube tu archivo CSV", type="csv")

    if uploaded_file is not None:
        # Leer el archivo CSV
        df = pd.read_csv(uploaded_file)

        # Limpiar y ordenar los datos
        df_clean = clean_data(df)

        # Mostrar los datos limpios
        st.dataframe(df_clean)

        # Generar el archivo Excel
        with pd.ExcelWriter('datos_ordenados.xlsx') as writer:
            df_clean.to_excel(writer, index=False)

        st.success("¡Archivo Excel generado exitosamente!")

if __name__ == "__main__":
    main()